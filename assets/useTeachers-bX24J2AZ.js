import{r as d}from"./router-DwwGQyGz.js";import{q as w,c as u,o as g,g as y,a as E,s as p,d as S,u as b,w as i,b as q,e as $}from"./firebase-Bm0Jh8Cr.js";import{d as n}from"./config-CjFVmyQa.js";const x=async t=>{try{return(await E(u(n,"teachers"),{...t,createdAt:p(),updatedAt:p()})).id}catch(e){throw console.error("Error adding teacher:",e),e}},P=async()=>{try{const t=w(u(n,"teachers"),g("fullname","asc"));return(await y(t)).docs.map(a=>({id:a.id,...a.data()}))}catch(t){throw console.error("Error getting teachers:",t),t}},H=async t=>{try{const e=S(n,"teachers",t),a=await $(e);if(a.exists())return{id:a.id,...a.data()};throw new Error("Teacher not found")}catch(e){throw console.error("Error getting teacher by ID:",e),e}},v=async(t,e)=>{try{const a=S(n,"teachers",t);return await b(a,{...e,updatedAt:p()}),!0}catch(a){throw console.error("Error updating teacher:",a),a}},L=async t=>{try{const e=w(u(n,"attendance"),i("teacherId","==",t)),r=(await y(e)).docs.map(l=>q(l.ref));return await Promise.all(r),await q(S(n,"teachers",t)),!0}catch(e){throw console.error("Error deleting teacher:",e),e}},Q=async t=>{try{const e=w(u(n,"teachers"),i("fullname",">=",t),i("fullname","<=",t+"ï£¿"),g("fullname","asc"));return(await y(e)).docs.map(r=>({id:r.id,...r.data()}))}catch(e){throw console.error("Error searching teachers:",e),e}},j=async()=>{try{const e=(await y(u(n,"teachers"))).docs.map(r=>r.data()),a=[...new Set(e.map(r=>r.department))];return{totalTeachers:e.length,totalDepartments:a.length}}catch(t){throw console.error("Error getting teacher statistics:",t),t}},J=async t=>{try{return(await E(u(n,"attendance"),{...t,createdAt:p(),updatedAt:p()})).id}catch(e){throw console.error("Error adding attendance:",e),e}},K=async t=>{try{const e=w(u(n,"attendance"),i("date","==",t),g("createdAt","desc"));return(await y(e)).docs.map(r=>({id:r.id,...r.data()}))}catch(e){throw console.error("Error getting attendance by date:",e),e}},M=async(t,e,a)=>{try{const r=w(u(n,"attendance"),i("teacherId","==",t),i("date",">=",e),i("date","<=",a),g("date","desc"));return(await y(r)).docs.map(f=>({id:f.id,...f.data()}))}catch(r){throw console.error("Error getting attendance by teacher:",r),r}},N=async(t,e)=>{try{const a=w(u(n,"attendance"),i("date",">=",t),i("date","<=",e),g("date","desc"));return(await y(a)).docs.map(l=>({id:l.id,...l.data()}))}catch(a){throw console.error("Error getting attendance by date range:",a),a}},O=async(t,e)=>{try{const a=S(n,"attendance",t);return await b(a,{...e,updatedAt:p()}),!0}catch(a){throw console.error("Error updating attendance:",a),a}},U=()=>{const[t,e]=d.useState([]),[a,r]=d.useState(!1),[l,f]=d.useState(null),[A,D]=d.useState({totalTeachers:0,totalDepartments:0}),o=d.useCallback(async c=>{r(!0),f(null);try{return await c()}catch(s){return console.error("Database operation error:",s),f(s.message||"An error occurred"),null}finally{r(!1)}},[]),h=d.useCallback(async()=>{const c=await o(P);c&&e(c)},[o]),R=d.useCallback(async c=>{const s=await o(()=>x(c));return s&&await h(),s},[o,h]),k=d.useCallback(async(c,s)=>{const m=await o(()=>v(c,s));return m&&await h(),m},[o,h]),C=d.useCallback(async c=>{const s=await o(()=>L(c));return s&&e(m=>m.filter(I=>I.id!==c)),s},[o]),B=d.useCallback(async c=>{if(!c.trim()){await h();return}const s=await o(()=>Q(c));s&&e(s)},[o,h]),T=d.useCallback(async()=>{const c=await o(j);c&&D(c)},[o]);return d.useEffect(()=>{h(),T()},[h,T]),{teachers:t,loading:a,error:l,stats:A,fetchTeachers:h,addTeacher:R,updateTeacher:k,deleteTeacher:C,searchTeachers:B,fetchTeacherStats:T}};export{M as a,H as b,J as c,O as d,N as e,K as g,U as u};
